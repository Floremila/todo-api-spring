# --- PROD (PostgreSQL + HTTPS) ---

# ====== Server / HTTPS ======
#if enable HTTPS, use 8443 and keep 8080 for (optional) HTTP->HTTPS redirect.
server.port=8443
http.port=8080

# Self-signed keystore (M6). Generate with keytool and adjust password if needed:
# keytool -genkeypair -alias mycert -keyalg RSA -keysize 2048 -storetype PKCS12 \
#   -keystore src/main/resources/mykeystore.p12 -validity 3650 \
#   -storepass changeit -keypass changeit \
#   -dname "CN=localhost, OU=Dev, O=Todo, L=Stockholm, S=Stockholm, C=SE"
server.ssl.key-store=classpath:mykeystore.p12
server.ssl.key-store-password=changeit
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=mycert

# ====== Datasource (env-driven) ======
# In Docker Compose DB_HOST=db; locally export DB_HOST=localhost.
spring.datasource.url=jdbc:postgresql://${DB_HOST:db}:5432/todos
spring.datasource.username=${DB_USER:todo}
spring.datasource.password=${DB_PASSWORD:__MISSING_DB_PASSWORD__}
# (Optional; Spring Boot infers this)
# spring.datasource.driver-class-name=org.postgresql.Driver

# ====== JPA / Hibernate ======
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ====== H2 disabled in prod ======
spring.h2.console.enabled=false
